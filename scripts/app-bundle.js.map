{"version":3,"sources":["app.ts","environment.ts","main.ts","searchword.ts","testCall.ts","resources/index.ts","C:/Users/0012426/git/isolema/src/model/configuration.js"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["\nimport {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n public router: Router;\n public configureRouter(config: RouterConfiguration, router: Router) {\n    this.router = router;\n    config.title = 'Isomorfismos';\n    config.map([\n      { route: '', redirect: 'searchword' },\n      { route: 'searchword', name: 'searchword', moduleId: 'searchword', nav: true, title: 'Busrcar palabra' },\n      { route: 'api/v1/isolema/wordLike', moduleId: 'testCall'}\n    ]);\n    config.mapUnknownRoutes('not-found');\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { bindable, autoinject } from 'aurelia-framework';\r\n\r\n@autoinject\r\nexport class SearchWord {\r\n    @bindable\r\n    word: string = '123';\r\n    private httpClient: HttpClient;\r\n    words: any = [ ];\r\n\r\n    constructor(httpClient: HttpClient) {\r\n        this.httpClient = httpClient;\r\n        //    this.httpClient = new HttpClient();\r\n        this.httpClient.configure((config) => {\r\n            config.withBaseUrl('/api/v1/isolema/wordLike/')\r\n                .withDefaults({\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request; // you can return a modified Request, or you can short-circuit the request by returning a Response\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response; // you can return a modified Response\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    public wordChanged(newValue: string, oldValue: string) {\r\n        if (newValue.length > 3) {\r\n            this.httpClient.fetch(`${newValue}`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    this.words = json.words;\r\n                    console.log(json);\r\n                });\r\n        }\r\n        console.log(`wordChanged(${newValue}, ${oldValue})`);\r\n    }\r\n}\r\n","\r\n\r\nexport class TestCall {\r\n\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"../src"}